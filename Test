-- Pref UI Library
-- Author: CHed (2025)
-- Modern lightweight UI library

local Pref = {}

local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

--== Utilities ==--
local function create(class, props)
	local obj = Instance.new(class)
	for k, v in pairs(props) do
		obj[k] = v
	end
	return obj
end

--== Create Window ==--
function Pref:CreateWindow(settings)
	settings = settings or {}
	local title = settings.Title or "Window"
	local size = settings.Size or UDim2.fromOffset(560, 300)

	local ScreenGui = create("ScreenGui", {
		Name = "Pref Notification",
		Parent = game:GetService("CoreGui"),
		ZIndexBehavior = Enum.ZIndexBehavior.Sibling,
		ResetOnSpawn = false
	})

	local MainFrame = create("Frame", {
		Parent = ScreenGui,
		Size = size,
		Position = UDim2.new(0.5, -size.X.Offset/2, 0.5, -size.Y.Offset/2),
		BackgroundColor3 = Color3.fromRGB(35, 35, 40),
		BorderSizePixel = 0,
		Visible = true
	})

	create("UICorner", {Parent = MainFrame, CornerRadius = UDim.new(0,10)})
	create("UIStroke", {Parent = MainFrame, Color = Color3.fromRGB(70,70,75), Thickness = 1})
	
	local TitleBar = create("TextLabel", {
		Parent = MainFrame,
		Text = title,
		Font = Enum.Font.GothamBold,
		TextSize = 18,
		TextColor3 = Color3.fromRGB(255,255,255),
		BackgroundTransparency = 1,
		Size = UDim2.new(1, -10, 0, 30),
		Position = UDim2.new(0, 10, 0, 5),
		TextXAlignment = Enum.TextXAlignment.Left
	})

	local Content = create("Frame", {
		Parent = MainFrame,
		Size = UDim2.new(1, -10, 1, -45),
		Position = UDim2.new(0, 5, 0, 35),
		BackgroundTransparency = 1
	})

	local Window = {Main = MainFrame, Content = Content, ScreenGui = ScreenGui}

	--== Toggle Button ==--
	function Window:ToggleButton(opts)
		opts = opts or {}
		local title = opts.Title or "Open"
		local icon = opts.Icon or ""
		local radius = opts.CornerRadius or UDim.new(0,25)

		local toggleBtn = create("ImageButton", {
			Name = "ToggleButton",
			Parent = ScreenGui,
			Size = UDim2.fromOffset(50, 50),
			Position = UDim2.new(0, 15, 0, 15),
			BackgroundColor3 = Color3.fromRGB(40, 40, 45),
			Image = icon
		})
		create("UICorner", {Parent = toggleBtn, CornerRadius = radius})
		create("UIStroke", {Parent = toggleBtn, Color = Color3.fromRGB(75,75,80), Thickness = 1})

		local opened = true
		toggleBtn.MouseButton1Click:Connect(function()
			opened = not opened
			TweenService:Create(MainFrame, TweenInfo.new(0.25, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {
				Position = opened and UDim2.new(0.5, -size.X.Offset/2, 0.5, -size.Y.Offset/2)
					or UDim2.new(0.5, -size.X.Offset/2, 0.5, size.Y.Offset)
			}):Play()
		end)
	end

	--== Tab ==--
	function Window:Tab(opts)
		opts = opts or {}
		local tabTitle = opts.Title or "Tab"
		
		local TabFrame = create("ScrollingFrame", {
			Parent = Content,
			Size = UDim2.new(1, -10, 1, -10),
			CanvasSize = UDim2.new(0, 0, 0, 0),
			ScrollBarThickness = 4,
			BackgroundTransparency = 1
		})
		local layout = create("UIListLayout", {
			Parent = TabFrame,
			Padding = UDim.new(0, 6)
		})
		
		local Tab = {}
		
		function Tab:Button(opts)
			opts = opts or {}
			local btn = create("TextButton", {
				Parent = TabFrame,
				Text = opts.Title or "Button",
				Font = Enum.Font.GothamBold,
				TextSize = 14,
				TextColor3 = Color3.fromRGB(255,255,255),
				BackgroundColor3 = Color3.fromRGB(50, 50, 55),
				Size = UDim2.new(1, -5, 0, 32)
			})
			create("UICorner", {Parent = btn, CornerRadius = UDim.new(0,6)})
			btn.MouseButton1Click:Connect(function()
				if opts.Callback then
					opts.Callback()
				end
			end)
			return btn
		end
		
		function Tab:Toggle(opts)
			opts = opts or {}
			local state = false
			local ToggleBtn = create("TextButton", {
				Parent = TabFrame,
				Text = (opts.Title or "Toggle") .. ": OFF",
				Font = Enum.Font.GothamBold,
				TextSize = 14,
				TextColor3 = Color3.fromRGB(255,255,255),
				BackgroundColor3 = Color3.fromRGB(50, 50, 55),
				Size = UDim2.new(1, -5, 0, 32)
			})
			create("UICorner", {Parent = ToggleBtn, CornerRadius = UDim.new(0,6)})
			ToggleBtn.MouseButton1Click:Connect(function()
				state = not state
				ToggleBtn.Text = (opts.Title or "Toggle") .. ": " .. (state and "ON" or "OFF")
				TweenService:Create(ToggleBtn, TweenInfo.new(0.2), {
					BackgroundColor3 = state and Color3.fromRGB(60,120,255) or Color3.fromRGB(50,50,55)
				}):Play()
				if opts.Callback then
					opts.Callback(state)
				end
			end)
		end
		
		function Tab:Divider()
			create("Frame", {
				Parent = TabFrame,
				Size = UDim2.new(1, -5, 0, 1),
				BackgroundColor3 = Color3.fromRGB(70,70,75)
			})
		end
		
		return Tab
	end

	return Window
end

return Pref

local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Library
local Library = {}
Library.UI = Instance.new("ScreenGui")
Library.UI.Name = "N8WR5A2K_UI"
Library.UI.ResetOnSpawn = false
Library.UI.Parent = CoreGui

-- Dragging Function
local function MakeDraggable(Frame, DragHandle)
	local dragging, dragInput, dragStart, startPos

	local function update(input)
		local delta = input.Position - dragStart
		Frame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	DragHandle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = Frame.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	DragHandle.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
end

-- Create Window
function Library:CreateWindow(title)
	local Window = Instance.new("Frame")
	Window.Name = "MainWindow"
	Window.Parent = Library.UI
	Window.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
	Window.Size = UDim2.new(0, 350, 0, 400)
	Window.Position = UDim2.new(0.5, -175, 0.5, -200)
	Window.Active = true

	local UICorner = Instance.new("UICorner", Window)
	UICorner.CornerRadius = UDim.new(0, 10)

	local TitleBar = Instance.new("Frame")
	TitleBar.Name = "TitleBar"
	TitleBar.Parent = Window
	TitleBar.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	TitleBar.Size = UDim2.new(1, 0, 0, 30)

	local TitleCorner = Instance.new("UICorner", TitleBar)
	TitleCorner.CornerRadius = UDim.new(0, 10)

	local TitleLabel = Instance.new("TextLabel")
	TitleLabel.Parent = TitleBar
	TitleLabel.BackgroundTransparency = 1
	TitleLabel.Size = UDim2.new(1, 0, 1, 0)
	TitleLabel.Text = title or "UI Library"
	TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TitleLabel.TextScaled = true
	TitleLabel.Font = Enum.Font.GothamBold

	local Container = Instance.new("Frame")
	Container.Name = "Container"
	Container.Parent = Window
	Container.BackgroundTransparency = 1
	Container.Size = UDim2.new(1, 0, 1, -30)
	Container.Position = UDim2.new(0, 0, 0, 30)

	local UIList = Instance.new("UIListLayout", Container)
	UIList.Padding = UDim.new(0, 8)
	UIList.FillDirection = Enum.FillDirection.Vertical
	UIList.SortOrder = Enum.SortOrder.LayoutOrder

	MakeDraggable(Window, TitleBar)

	local WindowFuncs = {}

	function WindowFuncs:CreateSection(name)
		local Section = Instance.new("Frame")
		Section.Parent = Container
		Section.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
		Section.Size = UDim2.new(1, -10, 0, 40)

		local SectionCorner = Instance.new("UICorner", Section)
		SectionCorner.CornerRadius = UDim.new(0, 6)

		local Label = Instance.new("TextLabel")
		Label.Parent = Section
		Label.BackgroundTransparency = 1
		Label.Size = UDim2.new(1, 0, 1, 0)
		Label.Text = name or "Section"
		Label.Font = Enum.Font.GothamBold
		Label.TextColor3 = Color3.fromRGB(255, 255, 255)
		Label.TextScaled = true

		return Section
	end

	function WindowFuncs:CreateButton(text, callback)
		local Button = Instance.new("TextButton")
		Button.Parent = Container
		Button.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
		Button.Size = UDim2.new(1, -10, 0, 35)
		Button.Text = text or "Button"
		Button.TextColor3 = Color3.fromRGB(255, 255, 255)
		Button.Font = Enum.Font.GothamBold
		Button.TextScaled = true

		local ButtonCorner = Instance.new("UICorner", Button)
		ButtonCorner.CornerRadius = UDim.new(0, 6)

		Button.MouseButton1Click:Connect(function()
			if callback then
				callback()
			end
			TweenService:Create(Button, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}):Play()
			task.wait(0.1)
			TweenService:Create(Button, TweenInfo.new(0.1), {BackgroundColor3 = Color3.fromRGB(50, 50, 50)}):Play()
		end)
	end

	function WindowFuncs:CreateToggle(text, default, callback)
		local Toggle = Instance.new("Frame")
		Toggle.Parent = Container
		Toggle.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
		Toggle.Size = UDim2.new(1, -10, 0, 35)

		local ToggleCorner = Instance.new("UICorner", Toggle)
		ToggleCorner.CornerRadius = UDim.new(0, 6)

		local Label = Instance.new("TextLabel")
		Label.Parent = Toggle
		Label.BackgroundTransparency = 1
		Label.Size = UDim2.new(0.8, 0, 1, 0)
		Label.Text = text or "Toggle"
		Label.Font = Enum.Font.GothamBold
		Label.TextColor3 = Color3.fromRGB(255, 255, 255)
		Label.TextScaled = true
		Label.TextXAlignment = Enum.TextXAlignment.Left
		Label.Position = UDim2.new(0.05, 0, 0, 0)

		local Switch = Instance.new("Frame")
		Switch.Parent = Toggle
		Switch.AnchorPoint = Vector2.new(1, 0.5)
		Switch.Position = UDim2.new(0.95, 0, 0.5, 0)
		Switch.Size = UDim2.new(0, 50, 0, 20)
		Switch.BackgroundColor3 = Color3.fromRGB(80, 80, 80)

		local SwitchCorner = Instance.new("UICorner", Switch)
		SwitchCorner.CornerRadius = UDim.new(1, 0)

		local Circle = Instance.new("Frame")
		Circle.Parent = Switch
		Circle.Size = UDim2.new(0, 20, 0, 20)
		Circle.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
		Circle.Position = UDim2.new(0, 0, 0, 0)

		local CircleCorner = Instance.new("UICorner", Circle)
		CircleCorner.CornerRadius = UDim.new(1, 0)

		local toggled = default or false
		if toggled then
			Switch.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
			Circle.Position = UDim2.new(1, -20, 0, 0)
		end

		local function SetToggle(state)
			toggled = state
			if toggled then
				TweenService:Create(Switch, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(0, 170, 255)}):Play()
				TweenService:Create(Circle, TweenInfo.new(0.2), {Position = UDim2.new(1, -20, 0, 0)}):Play()
			else
				TweenService:Create(Switch, TweenInfo.new(0.2), {BackgroundColor3 = Color3.fromRGB(80, 80, 80)}):Play()
				TweenService:Create(Circle, TweenInfo.new(0.2), {Position = UDim2.new(0, 0, 0, 0)}):Play()
			end
			if callback then callback(toggled) end
		end

		Switch.InputBegan:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.MouseButton1 then
				SetToggle(not toggled)
			end
		end)

		return SetToggle
	end

	return WindowFuncs
end

return Library

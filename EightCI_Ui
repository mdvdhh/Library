local CoreGui = game:GetService("CoreGui")
local Players = game:GetService("Players")
local Player = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")

local RandomName = ""
local Characters = "QWERTYUIOPASDFGHJKLZXCVBNM123456789"
for i = 1, 8 do
	local idx = math.random(1, #Characters)
	RandomName = RandomName .. Characters:sub(idx, idx)
end

local combining = {
	"̐","̑","̒","̓","̔","̕","̖","̗","̘","̙","̚",
	"̛","̃","̄","̅","̇","̈","̉","͊","͋","͌","͍",
	"͎","̸","̷","̶","̺","̻","͠","͡","ͣ","ͤ","ͥ",
	"ͦ","ͧ","ͨ","ͩ","ͪ","ͫ","ͬ","ͭ","ͮ","ͯ"
}

local function zalgo(str, intensity)
	intensity = intensity or 2
	local res = {}
	for i = 1, #str do
		local ch = str:sub(i, i)
		table.insert(res, ch)
		local num = math.random(0, intensity)
		for j = 1, num do
			local mark = combining[math.random(1, #combining)]
			table.insert(res, mark)
		end
	end
	return table.concat(res)
end

local RandomZalgoName = zalgo(RandomName, 3)

local Gui = Instance.new("ScreenGui")
Gui.Name = "EightCI_" .. RandomZalgoName
Gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
Gui.Parent = CoreGui

local Main = Instance.new("Frame")
Main.Name = "Main"
Main.Size = UDim2.new(0, 290, 0, 214)
Main.Position = UDim2.new(0, 230, 0, 32)
Main.BackgroundColor3 = Color3.fromRGB(0, 0, 0)
Main.BorderSizePixel = 0
Main.Active = true
Main.Draggable = true
Main.Parent = Gui
Instance.new("UICorner", Main)

local TitleFrame = Instance.new("Frame")
TitleFrame.Size = UDim2.new(0, 228, 0, 24)
TitleFrame.Position = UDim2.new(0, 16, 0, 6)
TitleFrame.BackgroundTransparency = 1
TitleFrame.Parent = Main

local TitleText = Instance.new("TextLabel")
TitleText.Text = "EightCI Ui"
TitleText.Size = UDim2.new(0, 228, 0, 24)
TitleText.BackgroundTransparency = 1
TitleText.TextColor3 = Color3.fromRGB(255, 255, 255)
TitleText.TextScaled = true
TitleText.TextXAlignment = Enum.TextXAlignment.Left
TitleText.Parent = TitleFrame

local Close = Instance.new("TextButton")
Close.Name = "CloseBtn"
Close.Text = "-"
Close.Size = UDim2.new(0, 26, 0, 26)
Close.Position = UDim2.new(0, 248, 0, 4)
Close.BackgroundTransparency = 1
Close.TextScaled = true
Close.TextColor3 = Color3.fromRGB(255, 255, 255)
Close.Parent = Main

local Scroll = Instance.new("ScrollingFrame")
Scroll.Size = UDim2.new(0, 284, 0, 173)
Scroll.Position = UDim2.new(0, 3, 0, 37)
Scroll.BackgroundTransparency = 1
Scroll.ScrollBarThickness = 3
Scroll.ElasticBehavior = Enum.ElasticBehavior.Never
Scroll.Parent = Main

local Layout = Instance.new("UIListLayout")
Layout.Padding = UDim.new(0, 8)
Layout.SortOrder = Enum.SortOrder.LayoutOrder
Layout.HorizontalAlignment = Enum.HorizontalAlignment.Center
Layout.Parent = Scroll

Scroll.CanvasSize = UDim2.new(0, 0, 0, Layout.AbsoluteContentSize.Y)
Layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
	Scroll.CanvasSize = UDim2.new(0, 0, 0, Layout.AbsoluteContentSize.Y + 12)
end)

local EightCI = {}

function EightCI:CreateWindow(data)
	local self = setmetatable({}, {__index = EightCI})
	self.Gui = Gui
	self.Main = Main
	self.Scroll = Scroll
	self.TitleText = TitleText
	return self
end

function EightCI:OpenButton(data)
	local OpenButton = Instance.new("Frame")
	OpenButton.Name = "OpenButton"
	OpenButton.Size = UDim2.new(0, 162, 0, 44)
	OpenButton.Position = UDim2.new(0, 32, 0, 14)
	OpenButton.BackgroundColor3 = Color3.fromRGB(6, 6, 6)
	OpenButton.Visible = false
	OpenButton.Parent = self.Gui
	local corner = Instance.new("UICorner")
	corner.CornerRadius = data.CornerRadius or UDim.new(0, 30)
	corner.Parent = OpenButton

	local OpenText = Instance.new("TextButton")
	OpenText.Text = data.Title or "Open"
	OpenText.Size = UDim2.new(0, 82, 0, 32)
	OpenText.Position = UDim2.new(0, 74, 0, 6)
	OpenText.BackgroundTransparency = 1
	OpenText.TextColor3 = Color3.fromRGB(255, 255, 255)
	OpenText.TextScaled = true
	OpenText.Parent = OpenButton

	local OpenIcon = Instance.new("ImageLabel")
	OpenIcon.Image = data.Icon or "rbxassetid://844956"
	OpenIcon.Size = UDim2.new(0, 31, 0, 31)
	OpenIcon.Position = UDim2.new(0, 40, 0, 7)
	OpenIcon.BackgroundTransparency = 1
	OpenIcon.Parent = OpenButton

	Close.MouseButton1Click:Connect(function()
		self.Main.Visible = false
		OpenButton.Visible = true
	end)

	OpenText.MouseButton1Click:Connect(function()
		self.Main.Visible = true
		OpenButton.Visible = false
	end)
end

local function createBase(parent)
	local base = Instance.new("Frame")
	base.Size = UDim2.new(0, 252, 0, 36)
	base.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	base.BorderSizePixel = 0
	base.Parent = parent
	Instance.new("UICorner", base)
	return base
end

function EightCI:Button(data)
	local Button = createBase(self.Scroll)
	local Title = Instance.new("TextLabel")
	Title.Text = data.Title or "Button"
	Title.Size = UDim2.new(0, 192, 0, 26)
	Title.Position = UDim2.new(0, 10, 0, 5)
	Title.BackgroundTransparency = 1
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextScaled = true
	Title.TextXAlignment = Enum.TextXAlignment.Left
	Title.Parent = Button

	local Click = Instance.new("TextButton")
	Click.BackgroundTransparency = 1
	Click.Size = UDim2.new(1, 0, 1, 0)
	Click.Parent = Button
	Click.MouseButton1Click:Connect(function()
		pcall(data.Callback)
	end)
end

function EightCI:Toggle(data)
	local Toggle = createBase(self.Scroll)
	local Title = Instance.new("TextLabel")
	Title.Text = data.Title or "Toggle"
	Title.Size = UDim2.new(0, 192, 0, 26)
	Title.Position = UDim2.new(0, 10, 0, 5)
	Title.BackgroundTransparency = 1
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextScaled = true
	Title.TextXAlignment = Enum.TextXAlignment.Left
	Title.Parent = Toggle

	local Check = Instance.new("Frame")
	Check.Size = UDim2.new(0, 26, 0, 26)
	Check.Position = UDim2.new(0, 215, 0, 5)
	Check.BackgroundColor3 = Color3.fromRGB(114, 114, 114)
	Check.BorderSizePixel = 0
	Check.Parent = Toggle
	local c = Instance.new("UICorner")
	c.CornerRadius = UDim.new(0, 4)
	c.Parent = Check

	local enabled = data.Default or false
	local function update()
		Check.BackgroundColor3 = enabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(114, 114, 114)
	end
	update()

	Toggle.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			enabled = not enabled
			update()
			pcall(data.Callback, enabled)
		end
	end)
end

function EightCI:TextBox(data)
	local Box = createBase(self.Scroll)
	local Title = Instance.new("TextLabel")
	Title.Text = data.Title or "TextBox"
	Title.Size = UDim2.new(0, 138, 0, 26)
	Title.Position = UDim2.new(0, 10, 0, 5)
	Title.BackgroundTransparency = 1
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextScaled = true
	Title.TextXAlignment = Enum.TextXAlignment.Left
	Title.Parent = Box

	local TextBox = Instance.new("TextBox")
	TextBox.Size = UDim2.new(0, 88, 0, 28)
	TextBox.Position = UDim2.new(0, 156, 0, 4)
	TextBox.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
	TextBox.TextColor3 = Color3.fromRGB(242, 242, 242)
	TextBox.TextScaled = true
	TextBox.PlaceholderText = data.Placeholder or "Enter text..."
	TextBox.Text = ""
	TextBox.Parent = Box
	local cc = Instance.new("UICorner")
	cc.CornerRadius = UDim.new(0, 4)
	cc.Parent = TextBox

	TextBox.FocusLost:Connect(function()
		pcall(data.Callback, TextBox.Text)
	end)
end

function EightCI:Slider(data)
	local Slider = Instance.new("Frame")
	Slider.BorderSizePixel = 0
	Slider.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	Slider.Size = UDim2.new(0, 252, 0, 46)
	Slider.Parent = self.Scroll
	Instance.new("UICorner", Slider)

	local Title = Instance.new("TextLabel")
	Title.Text = data.Title or "Slider"
	Title.Size = UDim2.new(0, 186, 0, 14)
	Title.Position = UDim2.new(0, 10, 0, 6)
	Title.BackgroundTransparency = 1
	Title.TextColor3 = Color3.fromRGB(255, 255, 255)
	Title.TextScaled = true
	Title.TextXAlignment = Enum.TextXAlignment.Left
	Title.Parent = Slider

	local ValueLabel = Instance.new("TextLabel")
	ValueLabel.Size = UDim2.new(0, 36, 0, 18)
	ValueLabel.Position = UDim2.new(0, 208, 0, 6)
	ValueLabel.BackgroundTransparency = 1
	ValueLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	ValueLabel.TextScaled = true
	ValueLabel.Text = tostring(data.Default or 1)
	ValueLabel.Parent = Slider

	local Track = Instance.new("Frame")
	Track.BorderSizePixel = 0
	Track.BackgroundColor3 = Color3.fromRGB(140, 140, 140)
	Track.Size = UDim2.new(0, 236, 0, 3)
	Track.Position = UDim2.new(0, 8, 0, 33)
	Track.Parent = Slider

	local Fill = Instance.new("Frame")
	Fill.BorderSizePixel = 0
	Fill.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Fill.Size = UDim2.new(0, 0, 0, 3)
	Fill.Parent = Track

	local Handle = Instance.new("TextButton")
	Handle.BorderSizePixel = 0
	Handle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Handle.Size = UDim2.new(0, 13, 0, 13)
	Handle.Text = ""
	Handle.Position = UDim2.new(0, 0, 0, -5)
	Handle.Parent = Track

	local min, max = data.Min or 0, data.Max or 100
	local step = data.Step or 1
	local current = data.Default or min
	local dragging = false

	local function updateVisual(value)
		local percent = (value - min) / (max - min)
		local rel = Track.AbsoluteSize.X * percent
		Fill.Size = UDim2.new(0, rel, 0, 3)
		Handle.Position = UDim2.new(0, rel - 6, 0, -5)
		ValueLabel.Text = tostring(value)
	end

	local function setValueFromX(x)
		local rel = math.clamp(x - Track.AbsolutePosition.X, 0, Track.AbsoluteSize.X)
		local pct = rel / Track.AbsoluteSize.X
		local val = math.clamp(min + ((max - min) * pct), min, max)
		val = math.floor(val / step + 0.5) * step
		current = val
		updateVisual(val)
		pcall(data.Callback, val)
	end

	updateVisual(current)

	UserInputService.InputChanged:Connect(function(i)
		if dragging and (i.UserInputType == Enum.UserInputType.MouseMovement or i.UserInputType == Enum.UserInputType.Touch) then
			setValueFromX(i.Position.X)
		end
	end)

	Handle.InputBegan:Connect(function(i)
		if i.UserInputType == Enum.UserInputType.MouseButton1 or i.UserInputType == Enum.UserInputType.Touch then
			dragging = true
		end
	end)

	Handle.InputEnded:Connect(function(i)
		if i.UserInputType == Enum.UserInputType.MouseButton1 or i.UserInputType == Enum.UserInputType.Touch then
			dragging = false
		end
	end)
end

function EightCI:Section(data)
	local Section = Instance.new("Frame")
	Section.BorderSizePixel = 0
	Section.BackgroundTransparency = 1
	Section.BackgroundColor3 = Color3.fromRGB(143, 143, 143)
	Section.Size = UDim2.new(0, 252, 0, 31)
	Section.Parent = self.Scroll
	Instance.new("UICorner", Section)

	local TextLabel = Instance.new("TextLabel")
	TextLabel.Text = data.Title or "Section"
	TextLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
	TextLabel.BackgroundTransparency = 1
	TextLabel.Size = UDim2.new(1, 0, 1, 0)
	TextLabel.TextXAlignment = Enum.TextXAlignment[data.TextXAlignment or "Left"]
	TextLabel.TextSize = data.TextSize or 17
	TextLabel.Parent = Section
end

return EightCI
--// WertUi Library
local WertUi = {}
local TweenService = game:GetService("TweenService")
local CoreGui = game:GetService("CoreGui")

local function randomName()
    local chars = "QWERTYUIOPASDFGHJKLZMNXBCV123456789"
    local name = ""
    for i = 1, 8 do
        local rand = math.random(1, #chars)
        name = name .. string.sub(chars, rand, rand)
    end
    return name
end

function WertUi:CreateWindow(config)
    local Window = {}
    local Title = config.Title or "WertUi"
    local CornerRadius = config.Corner or 10
    local Size = config.Size or UDim2.fromOffset(280, 300)

    local Window = Instance.new("ScreenGui")
    Window = randomName()
    Window.Parent = CoreGui
    Window.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

    local Main = Instance.new("Frame")
    Main.Parent = Window
    Main.AnchorPoint = Vector2.new(0.5, 0.5)
    Main.Position = UDim2.new(0.5, 0, 0.5, 0)
    Main.Size = Size
    Main.BackgroundColor3 = Color3.fromRGB(28, 28, 28)
    Main.BorderSizePixel = 0
    Main.Active = true
    Main.Draggable = true
    Instance.new("UICorner", Main).CornerRadius = UDim.new(0, CornerRadius)

    local TitleLabel = Instance.new("TextLabel")
    TitleLabel.Parent = Main
    TitleLabel.Text = Title
    TitleLabel.Size = UDim2.new(1, -20, 0, 28)
    TitleLabel.Position = UDim2.new(0, 10, 0, 4)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextSize = 17
    TitleLabel.TextScaled = true
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left

    local Holder = Instance.new("ScrollingFrame")
    Holder.Parent = Main
    Holder.Size = UDim2.new(1, -10, 1, -38)
    Holder.Position = UDim2.new(0, 5, 0, 34)
    Holder.BackgroundTransparency = 1
    Holder.ScrollBarThickness = 4
    Holder.CanvasSize = UDim2.new(0, 0, 0, 0)
    Holder.AutomaticCanvasSize = Enum.AutomaticSize.Y

    local UIList = Instance.new("UIListLayout", Holder)
    UIList.Padding = UDim.new(0, 6)
    UIList.HorizontalAlignment = Enum.HorizontalAlignment.Center
    UIList.SortOrder = Enum.SortOrder.LayoutOrder

    local Padding = Instance.new("UIPadding", Holder)
    Padding.PaddingTop = UDim.new(0, 4)

    function Window:Section(cfg)
        local Sec = Instance.new("TextLabel")
        Sec.Parent = Holder
        Sec.Text = cfg.Title or "Section"
        Sec.Size = UDim2.new(1, -20, 0, 22)
        Sec.BackgroundTransparency = 1
        Sec.TextColor3 = Color3.fromRGB(170, 170, 170)
        Sec.Font = Enum.Font.GothamBold
        Sec.TextXAlignment = Enum.TextXAlignment[cfg.TextXAlignment or "Left"]
        Sec.TextSize = cfg.TextSize or 15
        return Sec
    end

    function Window:Button(cfg)
        local Btn = Instance.new("TextButton")
        Btn.Parent = Holder
        Btn.Text = cfg.Title or "Button"
        Btn.Size = UDim2.new(1, -20, 0, 28)
        Btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        Btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        Btn.Font = Enum.Font.Gotham
        Btn.TextSize = 14
        Btn.TextScaled = false
        Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 6)
        Btn.MouseButton1Click:Connect(function() pcall(cfg.Callback) end)
        return Btn
    end

    function Window:Toggle(cfg)
        local Frame = Instance.new("Frame")
        Frame.Parent = Holder
        Frame.Size = UDim2.new(1, -20, 0, 28)
        Frame.BackgroundTransparency = 1

        local Btn = Instance.new("TextButton")
        Btn.Parent = Frame
        Btn.Size = UDim2.new(1, -40, 1, 0)
        Btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        Btn.Text = cfg.Title or "Toggle"
        Btn.TextColor3 = Color3.fromRGB(255, 255, 255)
        Btn.Font = Enum.Font.Gotham
        Btn.TextSize = 14
        Btn.TextScaled = false
        Btn.TextXAlignment = Enum.TextXAlignment.Left
        Instance.new("UICorner", Btn).CornerRadius = UDim.new(0, 6)

        local Enabled = false
        local Indicator = Instance.new("Frame")
        Indicator.Parent = Frame
        Indicator.Size = UDim2.new(0, 22, 0, 22)
        Indicator.Position = UDim2.new(1, -26, 0.5, -11)
        Indicator.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
        Instance.new("UICorner", Indicator).CornerRadius = UDim.new(1, 0)

        local function setState(state)
            Enabled = state
            TweenService:Create(Indicator, TweenInfo.new(0.15), {
                BackgroundColor3 = Enabled and Color3.fromRGB(0, 170, 255) or Color3.fromRGB(60, 60, 60)
            }):Play()
            pcall(cfg.Callback, Enabled)
        end

        Btn.MouseButton1Click:Connect(function() setState(not Enabled) end)
        return Frame
    end

    function Window:Input(cfg)
        local Box = Instance.new("TextBox")
        Box.Parent = Holder
        Box.Size = UDim2.new(1, -20, 0, 28)
        Box.PlaceholderText = cfg.Placeholder or "Enter text..."
        Box.Text = ""
        Box.TextColor3 = Color3.fromRGB(255, 255, 255)
        Box.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
        Box.Font = Enum.Font.Gotham
        Box.TextSize = 14
        Box.TextScaled = false
        Instance.new("UICorner", Box).CornerRadius = UDim.new(0, 6)
        Box.FocusLost:Connect(function(e) if e then pcall(cfg.Callback, Box.Text) end end)
        return Box
    end

    function Window:Divider()
        local Line = Instance.new("Frame")
        Line.Parent = Holder
        Line.Size = UDim2.new(1, -20, 0, 1)
        Line.BackgroundColor3 = Color3.fromRGB(128, 128, 128)
        return Line
    end
    
    function WertUi:Notify(config)
    local Title = config.Title or "Notification"
    local Description = config.Description or ""
    local Duration = config.Duration or 3
    local Icon = config.Icon or ""
    local Position = config.Position or "TopRight"
    local Animation = config.Animation or "Slide"

    local TweenService = game:GetService("TweenService")

    local NotifyFrame = Instance.new("Frame")
    NotifyFrame.Parent = Window
    NotifyFrame.Size = UDim2.fromOffset(260, 80)
    NotifyFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    NotifyFrame.BorderSizePixel = 0
    NotifyFrame.BackgroundTransparency = 0
    Instance.new("UICorner", NotifyFrame).CornerRadius = UDim.new(0, 10)

    local UIStroke = Instance.new("UIStroke", NotifyFrame)
    UIStroke.Color = Color3.fromRGB(60, 60, 60)
    UIStroke.Thickness = 1

    if Icon ~= "" then
        local Img = Instance.new("ImageLabel", NotifyFrame)
        Img.Size = UDim2.fromOffset(40, 40)
        Img.Position = UDim2.fromOffset(10, 20)
        Img.BackgroundTransparency = 1
        Img.Image = Icon
    end

    local TitleLabel = Instance.new("TextLabel", NotifyFrame)
    TitleLabel.Size = UDim2.new(1, -60, 0, 25)
    TitleLabel.Position = UDim2.fromOffset(60, 10)
    TitleLabel.BackgroundTransparency = 1
    TitleLabel.Text = Title
    TitleLabel.Font = Enum.Font.GothamBold
    TitleLabel.TextSize = 16
    TitleLabel.TextColor3 = Color3.new(1, 1, 1)
    TitleLabel.TextXAlignment = Enum.TextXAlignment.Left

    local DescLabel = Instance.new("TextLabel", NotifyFrame)
    DescLabel.Size = UDim2.new(1, -60, 0, 40)
    DescLabel.Position = UDim2.fromOffset(60, 30)
    DescLabel.BackgroundTransparency = 1
    DescLabel.Text = Description
    DescLabel.Font = Enum.Font.Gotham
    DescLabel.TextSize = 14
    DescLabel.TextWrapped = true
    DescLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    DescLabel.TextXAlignment = Enum.TextXAlignment.Left

    local startPos, endPos
    if Position == "TopRight" then
        startPos = UDim2.new(1, 280, 0, 20)
        endPos = UDim2.new(1, -280, 0, 20)
    elseif Position == "TopCenter" then
        startPos = UDim2.new(0.5, -130, -0.3, 0)
        endPos = UDim2.new(0.5, -130, 0, 20)
    elseif Position == "BottomRight" then
        startPos = UDim2.new(1, 280, 1, -120)
        endPos = UDim2.new(1, -280, 1, -120)
    else
        startPos = UDim2.new(1, 280, 0, 20)
        endPos = UDim2.new(1, -280, 0, 20)
    end

    NotifyFrame.Position = startPos

    if Animation == "Slide" then
        TweenService:Create(NotifyFrame, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.Out), {Position = endPos}):Play()
    elseif Animation == "Fade" then
        NotifyFrame.Position = endPos
        NotifyFrame.BackgroundTransparency = 1
        TweenService:Create(NotifyFrame, TweenInfo.new(0.3), {BackgroundTransparency = 0}):Play()
    end

    task.delay(Duration, function()
        if Animation == "Slide" then
            TweenService:Create(NotifyFrame, TweenInfo.new(0.4, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {Position = startPos}):Play()
            task.wait(0.4)
        else
            TweenService:Create(NotifyFrame, TweenInfo.new(0.3), {BackgroundTransparency = 1}):Play()
            task.wait(0.3)
        end
        NotifyFrame:Destroy()
    end)
end

    return Window
end

return WertUi
